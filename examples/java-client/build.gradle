apply plugin: 'application'
apply plugin: 'idea'

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    checkstyleClasspath
}

task DroneInfo(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.DroneInfo"
    classpath = sourceSets.main.runtimeClasspath
}

task takeoffAndLand(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.TakeoffAndLand"
    classpath = sourceSets.main.runtimeClasspath
}

task setRtlAltitude(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.SetRtlAltitude"
    classpath = sourceSets.main.runtimeClasspath
}

task runMission(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.RunMission"
    classpath = sourceSets.main.runtimeClasspath
}

task runCamera(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.RunCamera"
    classpath = sourceSets.main.runtimeClasspath
}

task calibrate(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.Calibrate"
    classpath = sourceSets.main.runtimeClasspath
}

task runDownloadLastLog(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.DownloadLastLog"
    classpath = sourceSets.main.runtimeClasspath
}

task listPhotos(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.ListPhotos"
    classpath = sourceSets.main.runtimeClasspath
}

task systemShell(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.SystemShell"
    classpath = sourceSets.main.runtimeClasspath
}

task checkstyle(type: Checkstyle) {
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = project.files()
    checkstyleClasspath = project.configurations.checkstyleClasspath

    maxWarnings 0

    reports {
        xml.enabled true
        xml.destination new File("$project.buildDir/reports/checkstyle/checkstyle_report.xml")

        html.enabled true
        html.destination new File("$project.buildDir/reports/checkstyle/checkstyle_report.html")
    }
}

build.dependsOn 'checkstyle'

idea {
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

dependencies {
    checkstyleClasspath 'com.puppycrawl.tools:checkstyle:10.2'

    implementation 'io.mavsdk:mavsdk:1.1.1'

    implementation 'ch.qos.logback:logback-core:1.2.11'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.slf4j:slf4j-api:1.7.36'
}
